---
title: "solutions day 1"
format: html
---

## Exercises 1

1. `httr2` has several more functions to customize how a request is performed. What do these functions do

- `req_throttle`:
- `req_error`:
- `req_retry`:

2. You might want to add more information to the data.frame. Adapt the function parse_response to also extract: apiUrl, lastModifiedDate, pillarId

3. Request page 2 from the API

4. Make your own request to the API with a different search term

5. Wrap the request and parsing function in a loop to go through the pages, use `req_throttle` to make not more than 1 request per second

## Exercises 2

To get more information about an MP, we can use the endpoint "/api/Members/{id}/Biography"

1. Search for an MP you are interested in with the function above and use the id on the documentation website with "Try it out"
2. Copy the Curl call and translate it into `httr2` code
3. Wrangle the returned data into a tabular format
4. Write a function which lets you request information given an ID and which wrangles the results
5. Two more interesting endpoints are "/api/Posts/GovernmentPosts" and "/api/Posts/OppositionPosts". What do they do and how can you request data from them

## Exercises 3

1. Document the function we just created

2. Search for 10 scholars (note: You can use the conference data from the last session) 

3. Say you found an authors ID with the search function. How could you use "/author/{author_id}" and "/author/{author_id}/papers" to request more information about them?

4. Write a function that wraps "/author/{author_id}"

